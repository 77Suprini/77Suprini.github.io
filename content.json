{"meta":{"title":"7のblog小屋","subtitle":"南风知我意，吹梦到西洲。","description":"欢迎来观,这里是Seven的个人博客~","author":"Seven","url":"http://77suprini.github.io","root":"/"},"pages":[{"title":"about","date":"2022-08-27T12:24:06.000Z","updated":"2022-08-27T12:24:24.488Z","comments":true,"path":"about/index.html","permalink":"http://77suprini.github.io/about/index.html","excerpt":"","text":""},{"title":"contact","date":"2022-08-27T12:24:47.000Z","updated":"2022-08-27T12:25:30.734Z","comments":true,"path":"contact/index.html","permalink":"http://77suprini.github.io/contact/index.html","excerpt":"","text":""},{"title":"friends","date":"2022-08-27T12:25:00.000Z","updated":"2022-08-27T12:25:50.306Z","comments":true,"path":"friends/index.html","permalink":"http://77suprini.github.io/friends/index.html","excerpt":"","text":""},{"title":"404","date":"2022-08-27T12:31:47.000Z","updated":"2022-08-27T12:33:21.121Z","comments":true,"path":"404/index.html","permalink":"http://77suprini.github.io/404/index.html","excerpt":"","text":""},{"title":"tags","date":"2022-08-27T12:23:09.000Z","updated":"2022-08-27T12:23:29.490Z","comments":true,"path":"tags/index.html","permalink":"http://77suprini.github.io/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2022-08-27T12:20:57.000Z","updated":"2022-08-27T12:22:46.570Z","comments":true,"path":"categories/index.html","permalink":"http://77suprini.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Markdown写作简单介绍","slug":"markdownWrite","date":"2022-10-02T04:09:52.000Z","updated":"2022-10-02T04:29:48.000Z","comments":true,"path":"2022/10/02/markdownWrite/","link":"","permalink":"http://77suprini.github.io/2022/10/02/markdownWrite/","excerpt":"","text":"这是我的markdown文章示例这是二级标题（不要忽略井号后的空格）这是正文~。.md是markdown文件。标题的写法: 井号后打一个空格+标题名(几个井号就是几级标题)。markdown共支持六级标题。换行（enter键）并不代表新起了一段,只是换一行写。（但有部分文本编辑器会识别你的换行。） 中间空一行才是新起一段。在上一行打两个空格，就会换行但不新起一段。vscode还支持正则表达式，这里不作介绍。 变斜体就是在字的两端加一个星号，就像这样（快捷键ctrl i） 加粗就是在字的两端加两个星号，就像这样（快捷键ctrl b） 这是三级标题列表方法（1 点 空格） 哈哈哈 如果装了markdown all in one，会自动补全后面列表编号 不用太在意编号数字 编号打错了识别出来也是对的编号 要重新编号，就在列表中间加段落就行了比如这样 这就断开了 重新编号了 插入图片如果要插入本地图片，需要将图片拷贝到.md文件的同一个文件夹下 latex公式mark只要渲染器支持，就可以用latex公式！ 用2x2美元符号括起来就行了 (别打成中文的￥符号了) $$\\lim_{x \\to \\infin}\\frac{sin(t)}{x}&#x3D;1$$ 在文字中也可以插入公式(inline公式)2x1美元符号括起来 快捷键ctrl m自动插入两个美元符号,如$\\lim_{x \\to \\infin}f(x)$ 为了保持兼容性,建议在第一个美元符号前加一个空格,保证编译器基本正常识别 连按两下ctrl m就产生四个美元符号(自动单独一段落) 表格与一般文字的区别是,表格中间加上竖线表示属于某一列 表格第一行代表表头 要在表头下面加上一行,表示每一行朝左还是朝右对齐 右边打冒号就代表右对齐,左同理,两边都打冒号就代表居中对齐 下面的表就输入数据然后加竖线就好了 小明 小刚 小美 1.1 2.8 6.4 如果觉得渲染好看但文本中不好看,那就格式化一下 按住alt shift f就可以了 插入链接复制链接,选中想要添加的文字,ctrl v粘贴就行比如这样,这是哔哩哔哩 添加代码块用2x3个小撇号&#96;括起来就可以写代码了 要指定了语言才会高亮(在第一排小括号右边指定) 12345678910111213141516171819202122public class Test &#123; public static void main(String[] args) &#123; int time=1; Cat cat=new Cat(); cat.start(); while(true)&#123; System.out.println(&quot;main!&quot;+(time++)); if(time==100)break; &#125; &#125;&#125;class Cat extends Thread&#123; int time=1; @Override public void run()&#123; while(true)&#123; System.out.println(&quot;cat!&quot;+(time++)); if(time==100)break; &#125; &#125;&#125; 比如这里指定了java,就会以java的语法形式高亮出来 导出你的markdown(比如导出成pdf)可以用markdown preview enhanced(快捷键ctrl-k v) 在MPE预览中右键选择chrome-pdf导出即可 要先ctrl s保存才能正确导出,且需要谷歌chrome浏览器。在插件拓展设置把安装路径添加上，把chrome设为默认，有edge在会影响chrome。 题外话ctrl-k z进入专注写作模式。 如果想要退出，按两下esc就可以了。 另外，如果用MPE预览,它在插件设置里默认勾选了break on single new line,会导致敲了回车之后不只是换一行写，渲染之后的文档也在这里换行了。 （注：本文是学习b站up主zplay大佬的视频后写作，是我第一次markdown写作，写的比较简陋，很多用得还不熟练，求轻喷。。可以点击链接直接访问zplay大佬的视频学习markdown写作。）","categories":[{"name":"markdown","slug":"markdown","permalink":"http://77suprini.github.io/categories/markdown/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://77suprini.github.io/tags/markdown/"},{"name":"vscode","slug":"vscode","permalink":"http://77suprini.github.io/tags/vscode/"}]},{"title":"使用hexo维护博客","slug":"hexoMaintainBlog","date":"2022-10-02T03:29:03.000Z","updated":"2022-10-02T04:19:13.000Z","comments":true,"path":"2022/10/02/hexoMaintainBlog/","link":"","permalink":"http://77suprini.github.io/2022/10/02/hexoMaintainBlog/","excerpt":"","text":"使用hexo维护博客和发布文章博客维护token(令牌)的更新以github的Blog为例: 若令牌更新,hexo d会提示失败 hexo g后git config –global user.email [输入你的邮箱]git config –global user.name [输入github名字]然后再hexo d, 输入更改后的token就可以了 hexo快捷键hexo s 本地预览 hexo g 生成网站静态文件到默认设置的 public 文件夹 hexo d 生成网站静态文件并部署到设定的仓库 hexo clean 清除缓存文件 db.json 和已生成的静态文件 public hexo n: 1.hexo n “笔记 三”新建一篇标题为 笔记 三 的文章，因为标题里有空格，所以加上了引号。文章标题可以在对应 md 文件里改，新建时标题可以写的简单些；hexo n 是 hexo new 的缩写，命令效果一致。动态博客中通过发布文章页面设置的各种属性，在hexo里要这样设置。 2.hexo n page aboutme新建一个标题为 aboutme 的页面，默认链接地址为 主页地址&#x2F;aboutme&#x2F;标题可以为中文，但一般习惯用英文；页面标题和文章一样可以随意修改；页面不会出现在首页文章列表和归档中，也不支持设置分类和标签。 hexo的部分文件夹source：资源文件夹。用来存放图片、Markdown文档（文章、草稿）、各种页面（分类、关于页面等）。 public：将source文件夹里的Markdown文档，转换成index.html。再结合主题进行渲染，就是我们最终看到的博客。 .deploy_git：将public文件夹的内容提交到Github后生成，内容与public文件夹基本一致。 发布文章 Hexo默认使用的格式是markdown格式的文件，所以上传markdown文件可以自动转化为HTML格式的文章； 将.md文件复制到你hexo博客文件夹 中 source 下的 _posts 中，默认只有一个 hello-world.md； hexo clean, hexo g 和hexo d 注意你的.md文件是utf-8还是GBK格式,别搞错了。hexo发布博客需要.md文件是utf-8格式。 hexo目录解析 .deploy_git: 这个目录是执行 hexo d 命令 后生成的,主要存放部署的信息. node_modules: 这个目录存放的是一些插件包 public : 这个目录是执行 hexo g后生成的, hexo会将”&#x2F;blog&#x2F;source&#x2F;“ 下面的.md后缀的文件编译为.html后缀的文件,存放在”&#x2F;blog&#x2F;public&#x2F; “ 路径下 scaffolds: 用来存放模板文件。模板文件的正文部分一般为空，一般在模板文件顶部有一个区域 ( 以 — 分隔的区域) 称作Front-matter,在这里配置的变量主要有title(即文章标题), date(即文章创建日期),comment(是否开启评论), tags(文章标签), categories(文章所属分类)等. 当你新建文章时，Hexo 会根据 scaffold 来建立文件，也就是说会在你创建的每个文件顶部自动加上模板文件中配置的这些内容. source: 存放你的文章(.md后缀的文件) static: 这个目录是我自己创建的，专门用来存放图片的 themes: 这个目录是存放主题的(默认主题是landscape, 目前使用最多的是next主题) .gitignore: 这个文件和git有关, 在这个文件里面可以配置哪些文件不被提交(例如: 配置 *.log ,那么在hexo d命令的时候, 任何以.log为后缀的文件将不会被提交到github) _admin-config.yml: 这个文件是安装了hexo 后台管理插件后生成的,这里暂时不作介绍,后面再说 _config.yml: 这个文件是hexo的核心配置文件(也称站点配置文件) _config.yml.back.yml: 这个文件是我自己创建的,是站点配置文件的备份. 以防哪一天老眼昏花把内容改错了,到时可以恢复. package.json: 应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。 db.json：略 package-lock.json:略 使用Hexo指令创建一篇文章新建文章hexo new 文章文件名 新建文章命令, 执行命令成功会返回一个路径，就是文章的所在路径，删除文章也只要删除对应的文章文件即可。 1hexo new [layout] &lt;title&gt; hexo new draft 草稿文件名新建草稿命令，草稿不会在博客上显示。在执行时加上 –draft 参数，或是把草稿中render_drafts参数设为true来预览草稿。 布局在hexo默认主题中，存在post（文章详情页）、page（导航标签页）、archive（归档页）、index（首页）、category（类别页）以及tag（标签页）这几种布局和一个总的layout布局。 每个主题的布局文件在主题的layout文件夹下，不同主题后缀可能不同，比如有的是pug。 发布草稿草稿是不会显示到博客上面的，有两张方法发布草稿为正式文章。 通过命令 1hexo publish 文章文件名 该命令可以将草稿发布为正式文章。 通过移动手动将“_drafts”目录下的草稿移动到“_posts”目录下即可发布草稿为正式文章。 添加分类和标签文章分类和标签在文章中添加，文章的参数列表如下： 参数 描述 默认值 layout 布局 title 标题 文章的文件名 date 建立日期 文件建立日期 updated 更新日期 文件更新日期 comments 开启文章的评论功能 true tags 标签（不适用于分页） categories 分类（不适用于分页） permalink 覆盖文章网址 keywords 仅用于 meta 标签和 Open Graph 的关键词（不推荐用） 在开头的“—”之间的内容为文章的参数，后面的才是文章正文。分类和标签在文章的参数，所以标签和分类是在文章中产生的，无法建立一个不属于任何文章的分类和标签。 添加分类参数“categories”表示分类，一篇文章只能属于一个分类，如果添加了多个分类，则下一个分类为子分类。添加分类的格式如下： 1234categories:- 分类- 子分类- 子子分类 添加标签参数“tags”表示标签，一篇文章可以有多个标签。添加标签的格式如下： 123tags:- 标签1- 标签2 愉快的写文章添加完标题、分类、标签后你就能愉快的写文章啦。Hexo默认使用.md文件，所以你直接按照markdown语法写文章就行了。注意, 发布文章需要你的.md文件是utf-8格式! 删除文章先删除本地文件，然后通过生成和部署命令进而将远程仓库中的文件也一并删除。 以最开始默认形成的helloworld.md这篇文章为例, 首先进入到source &#x2F; _post 文件夹中，找到helloworld.md文件 在本地直接执行删除 然后依次执行hexo g，hexo d 再去主页查看你就会发现你的博客上面已经空空如也了。至此，你的文章就删除成功了。 结束hexo维护博客和发布、删除文章的内容基本就这么多了。第一次写文章，markdown语法和hexo的使用技巧还比较生疏，如有不足之处希望大家多多包涵。 (注：部分内容转自CSDN玖涯的文章，可以点击链接直接访问大佬学习如何发布文章。)","categories":[{"name":"blog","slug":"blog","permalink":"http://77suprini.github.io/categories/blog/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://77suprini.github.io/tags/hexo/"},{"name":"博客维护","slug":"博客维护","permalink":"http://77suprini.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4/"}]}],"categories":[{"name":"markdown","slug":"markdown","permalink":"http://77suprini.github.io/categories/markdown/"},{"name":"blog","slug":"blog","permalink":"http://77suprini.github.io/categories/blog/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://77suprini.github.io/tags/markdown/"},{"name":"vscode","slug":"vscode","permalink":"http://77suprini.github.io/tags/vscode/"},{"name":"hexo","slug":"hexo","permalink":"http://77suprini.github.io/tags/hexo/"},{"name":"博客维护","slug":"博客维护","permalink":"http://77suprini.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4/"}]}